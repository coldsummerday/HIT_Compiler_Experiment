int int 1
identifier a 1
[ [ 1
number 10 1
] ] 1
, , 1
identifier b 1
= = 1
number 234 1
, , 1
identifier c 1
= = 1
number 2e4 1
; ; 1
function function 3
int int 3
identifier max 3
( ( 3
int int 3
identifier a 3
, , 3
int int 3
identifier b 3
) ) 3
{ { 3
if if 4
( ( 4
identifier a 4
> > 4
identifier b 4
) ) 4
return return 4
identifier a 4
; ; 4
else else 5
return return 5
identifier b 5
; ; 5
} } 6
function function 7
double double 7
identifier min 7
( ( 7
int int 7
identifier A 7
, , 7
int int 7
identifier B 7
) ) 7
{ { 7
if if 8
( ( 8
identifier A 8
< < 8
identifier B 8
) ) 8
return return 8
identifier A 8
; ; 8
else else 9
return return 9
identifier B 9
; ; 9
} } 10
function function 12
int int 12
identifier main 12
( ( 12
) ) 12
{ { 12
while while 13
( ( 13
identifier a 13
> > 13
number 1 13
) ) 13
print print 13
( ( 13
string "s" 13
) ) 13
; ; 13
int int 14
identifier b 14
= = 14
number 5 14
; ; 14
identifier b 15
= = 15
number 4 15
; ; 15
identifier a 16
[ [ 16
number 0 16
] ] 16
= = 16
number 5.1 16
; ; 16
double double 17
identifier sum_1_to_50 17
= = 17
number 1 17
; ; 17
for for 18
( ( 18
int int 18
identifier i 18
= = 18
number 1 18
; ; 18
identifier i 18
< < 18
number 100 18
; ; 18
identifier i 18
+ + 18
= = 18
number 1 18
) ) 18
{ { 18
if if 19
( ( 19
identifier i 19
< < 19
number 50 19
) ) 19
break break 19
; ; 19
else else 20
identifier sum_1_to_50 20
+ + 20
= = 20
identifier i 20
; ; 20
} } 21
int int 22
identifier k 22
= = 22
number 0 22
, , 22
identifier s 22
= = 22
( ( 22
( ( 22
number 534 22
- - 22
number 23 22
) ) 22
+ + 22
number 423 22
) ) 22
* * 22
number 23 22
; ; 22
while while 23
( ( 23
identifier k 23
< < 23
number 40 23
) ) 23
scanf scanf 23
( ( 23
identifier s 23
) ) 23
; ; 23
int int 24
identifier A 24
= = 24
number 50 24
, , 24
identifier B 24
= = 24
number 23 24
, , 24
identifier C 24
; ; 24
print print 25
( ( 25
string "cc" 25
) ) 25
; ; 25
identifier C 26
= = 26
function function 26
identifier max 26
( ( 26
identifier A 26
, , 26
identifier B 26
) ) 26
; ; 26
print print 27
( ( 27
identifier C 27
) ) 27
; ; 27
print print 28
( ( 28
identifier A 28
+ + 28
identifier B 28
* * 28
identifier C 28
) ) 28
; ; 28
return return 29
number 0 29
; ; 29
} } 30
